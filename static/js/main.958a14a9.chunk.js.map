{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundary.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","robot","Scroll","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gPAYeA,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,cACpB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCAXC,EAJE,SAAC,GACd,OAD6B,EAAbC,OACFC,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAqBN,GAAIM,EAAMN,GAAIC,KAAMK,EAAML,KAAMC,MAAOI,EAAMJ,OAAvDI,EAAMN,QCOnCO,EAVA,SAACX,GACd,OACE,qBACEY,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGf,EAAMgB,YCiBEC,E,kDAnBX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDkB,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKtB,MAAMgB,a,GAhBEQ,aCWbC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKzB,UAAU,MAAf,SACE,uBACEA,UAAU,mCACV0B,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAGI,G,wDACjB,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKT,SAAS,CAAEU,YAAaD,EAAME,OAAOC,SAb1C,EAAKjB,MAAQ,CACTV,OAAQ,GACRyB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKjB,SAAS,CAAEf,OAAQgC,S,oBAO/C,WAAU,IAAD,OACCC,EAAiBnB,KAAKJ,MAAMV,OAAOkC,QAAO,SAAAlC,GAAM,OAAIA,EAAOH,KAAKsC,cAAcC,SAAS,EAAK1B,MAAMe,YAAYU,kBACpH,OAAiC,IAA7BrB,KAAKJ,MAAMV,OAAOqC,OACX,yCAGH,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWyB,aAAcJ,KAAKS,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUvB,OAAQiC,e,GA9BbjB,cCKlBsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,8BACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BX,M","file":"static/js/main.958a14a9.chunk.js","sourcesContent":["const Card = (props) => {\n    return (\n        <div className='bg-light-green dib pa3 br3 ma2 grow bw2 shadow-5'>\n            <img alt='robot' src={`https://robohash.org/${props.id}?200x200`} />\n            <div>\n                <h2>{props.name}</h2>\n                <p>{props.email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return robots.map((robot) => <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} /> );\n}\n\nexport default CardList;","const Scroll = (props) => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"1px solid black\", height: \"800px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","const SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport CardList from './components/CardList';\nimport Scroll from './components/Scroll';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport SearchBox from './components/SearchBox';\nimport './App.css';\n\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchField: event.target.value });\n    }\n    \n    render() {\n        const filteredRobots = this.state.robots.filter(robots => robots.name.toLowerCase().includes(this.state.searchField.toLowerCase()));\n        if (this.state.robots.length === 0) {\n            return <h1>Loading</h1>\n        } else {\n            return (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            )\n        }\n    }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import CardList from './components/CardList';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import { robots } from './robots';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>, \n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}